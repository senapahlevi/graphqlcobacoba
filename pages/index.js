import Head from "next/head";
import Image from "next/image";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";

import { Header } from "../src";
import CobaAxios from "../src/CobaAxios";
import CobaGraphql from "../src/CobaGraphql";
import CobaGraphql2 from "../src/CobaGraphql2";
import Tes from "../src/Tes";
import Spacexgraphql from "../src/Spacexgraphql";
//import styles from "../styles/Home.module.css";
//import styles from "../styles/globals.css";
export default function Home({ launches }) {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {/*     <h1>Spacex Launches senn!!</h1>
        <div>
          {launches.map((launch) => {
            return (
              <a key={launch.id} href={launch.links.video_link}>
                <h3>{launch.mission_name}</h3>
                <p>
                  <strong>Launch Date:</strong> {new Date(launch.launch_date_local).toLocaleDateString("en-US")}
                </p>
              </a>
            );
          })}
        </div>
                

        */}
        <Spacexgraphql launches={launches} />
      </main>

      <footer>
        <a href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app" target="_blank" rel="noopener noreferrer">
          Powered by{" "}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "https://api.spacex.land/graphql/",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query GetLaunches {
        launchesPast(limit: 10) {
          id
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
            mission_patch
          }
          rocket {
            rocket_name
          }
        }
      }
    `,
  });

  return {
    props: {
      launches: data.launchesPast,
    },
  };
}
